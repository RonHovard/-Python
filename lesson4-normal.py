# Эти задачи необходимо решить используя регулярные выражения!

# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь заглавные первые буквы.
# email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре, допускается нижнее подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net), te_4_st@test.com - верно указан.

import re
#
# name = input('Введите Ваше имя: ')
# surname = input('Введите Вашу фамилию: ')
# email = input('Введите адрес электронной почты: ')
#
# pattern_name = '([A-ZА-ЯЁ][a-zа-яё]+)'
# pattern_email = '([a-z_0-9]+@[a-z0-9]+\.(ru|com|org))'
#
# check_email = re.search(pattern_email, email)
#
#
# def error_text(a):
#     return '{}(некорректный ввод данных)'.format(a)
#
#
# def get_user_data(arg):
#     check = re.match(pattern_name, arg)
#     try:
#         result = check.group(1)
#     except AttributeError:
#         result = error_text(arg)
#     return result
#
#
# try:
#     result_email = check_email.group(1)
# except AttributeError:
#     result_email = error_text(email)
#
# print(get_user_data(name), get_user_data(surname), result_email)

# Задача - 2:
# Вам дан текст:

some_str = '''
Мороз и солнце; день чудесный!
Еще ты дремлешь, друг прелестный —
Пора, красавица, проснись:
Открой сомкнуты негой взоры
Навстречу северной Авроры,
Звездою севера явись!
Вечор, ты помнишь, вьюга злилась,
На мутном небе мгла носилась;
Луна, как бледное пятно,
Сквозь тучи мрачные желтела,
И ты печальная сидела —
А нынче... погляди в окно:
Под голубыми небесами
Великолепными коврами,
Блестя на солнце, снег лежит;
Прозрачный лес один чернеет,
И ель сквозь иней зеленеет,
И речка подо льдом блестит.
Вся комната янтарным блеском
Озарена. Веселым треском
Трещит затопленная печь.
Приятно думать у лежанки.
Но знаешь: не велеть ли в санки
Кобылку бурую запречь?
Скользя по утреннему снегу,
Друг милый, предадимся бегу
Нетерпеливого коня
И навестим поля пустые,
Леса, недавно столь густые,
И берег, милый для меня.'''

# Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# более одной точки, при любом исходе сообщите результат пользователю!

pattern_text = '(\.\.\.)'
check_text = re.search(pattern_text, some_str)
try:
    result_check_text = check_text.group(1)
    print('Конструкция есть в тексте.')
except AttributeError:
    print('Данная конструкция в тексте не найдена.')


